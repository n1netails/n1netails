// ai-chat-card.component.less - Rewritten CSS

// Color Variables (can be moved to variables.less later)
@chat-bg: #1E1E20; // Main background of the chat content area
@input-area-bg: #1E1E20; // Background for the input area (same as chat-bg for seamless look)
@input-bg: #2A2E32; // Background for textarea
@input-border-color: #404245;
@input-text-color: #ECECEC;
@input-placeholder-color: #707070;
@primary-accent-color: #F06D0F; // Example primary color, from variables.less ideally

@button-default-bg: #5A5E63;
@button-default-border: #6A6E73;
@button-default-text: #E0E0E0;

// Main Card Styling
.ai-chat-card {
  margin-top: 8px;
  // nz-card usually has its own padding for .ant-card-body, remove it if it interferes
  .ant-card-body {
    padding: 0 !important; // Ensure no padding from nz-card itself
    height: 100%; // Make card body take full height if nz-card is sized
  }
}

// Chat Container: Main flex column
.chat-container {
  display: flex;
  flex-direction: column;
  height: 100%; // Assumes parent (nz-card .ant-card-body) has a defined height or can provide one
  min-height: 450px; // Minimum height for the chat card content
  background-color: @chat-bg;
}

// Message List Area: Flexible and scrollable
.message-list-area {
  flex: 1 1 auto; // Grow and shrink to take available vertical space
  min-height: 0;  // Essential for flex children that need to shrink
  overflow-y: auto; // Allow vertical scrolling for the message list area itself
                    // CDK virtual scroll will also manage scrolling within its viewport

  .chat-virtual-scroll-viewport {
    height: 100%; // CDK viewport should fill the message-list-area
    width: 100%;
  }

  .message-nz-list {
    padding: 16px; // Padding around the messages
    // Individual message item styling will be added later (bubbles, etc.)
  }
}

// Input Area: Fixed height at the bottom
.input-area {
  flex: 0 0 auto; // Does not grow or shrink vertically; height is based on content
  padding: 12px 16px;
  border-top: 1px solid @input-border-color; // Separation line
  background-color: @input-area-bg;

  // Internal layout: flex row for desktop
  display: flex;
  align-items: flex-end; // Align items to the bottom (useful if textarea rows > 1)
  gap: 12px;
}

.textarea-wrapper {
  flex: 1 1 auto; // Textarea wrapper takes available horizontal space
  min-width: 0;   // Allow it to shrink
  position: relative; // For nz-textarea-count positioning if needed

  .chat-textarea-input {
    width: 100%;
    min-height: 42px; // Good default height for a single row + padding
    padding: 10px 12px;
    background-color: @input-bg;
    border: 1px solid @input-border-color;
    border-radius: 8px;
    color: @input-text-color;
    line-height: 1.5;
    resize: vertical;

    &::placeholder {
      color: @input-placeholder-color;
    }

    &:focus {
      border-color: @primary-accent-color;
      box-shadow: 0 0 0 2px fade(@primary-accent-color, 20%);
      outline: none;
    }
  }
  // nz-textarea-count styling (Ant Design default might be fine, or adjust if needed)
  // .ant-input-textarea-show-count { ... }
}

.buttons-wrapper {
  flex-shrink: 0; // Buttons wrapper does not shrink
  display: flex;
  align-items: flex-end; // Align buttons to bottom with textarea
  gap: 8px;

  button[nz-button] {
    min-width: auto;
    height: 42px; // Match textarea min-height
    padding: 0 15px;
    border-radius: 8px;
    line-height: normal; // Reset line-height if default is too large for button height

    &.add-note-button {
      background-color: @button-default-bg;
      border-color: @button-default-border;
      color: @button-default-text;

      &:hover, &:focus {
        background-color: darken(@button-default-bg, 5%);
        border-color: darken(@button-default-border, 5%);
        color: @button-default-text;
      }
    }

    &.send-inari-button {
      background-color: @primary-accent-color;
      border-color: @primary-accent-color;
      color: white;

      &:hover, &:focus {
        background-color: darken(@primary-accent-color, 5%);
        border-color: darken(@primary-accent-color, 5%);
      }
    }
    // Spinner inside button needs to be light for dark buttons
    &[nzLoading] nz-spin ::ng-deep .ant-spin-dot i {
        background: white;
    }
    &.add-note-button[nzLoading] nz-spin ::ng-deep .ant-spin-dot i {
        background: @button-default-text; // Or specific color for this button's spinner
    }
  }
}

// Responsive adjustments for mobile
@media (max-width: 767px) { // Using a common breakpoint, adjust if needed
  .input-area {
    flex-direction: column;
    align-items: stretch; // Make items full width
    gap: 10px;
    padding: 10px; // Slightly less padding on mobile
  }

  .textarea-wrapper {
    // nz-textarea-count might need adjustment on mobile if it overlaps buttons
    // This could involve adding padding-bottom to textarea-wrapper
    // or specific positioning for .ant-input-textarea-show-count
    padding-bottom: 18px; // Example: space for character count if it's positioned absolutely at bottom
  }

  .buttons-wrapper {
    justify-content: flex-end; // Align buttons to the right on mobile (optional)
                               // Or make them full width:
    // display: grid;
    // grid-template-columns: 1fr 1fr; // For two buttons side-by-side, full width

    button[nz-button] {
       // flex: 1; // If using display:flex on buttons-wrapper and want them to share width
       // Or if buttons are stacked, make them width: 100%
    }
  }

  // Adjust message list padding on mobile if needed
  .message-list-area .message-nz-list {
    padding: 10px;
  }
}

// Message Bubble Styling
.message-nz-list {
  .ant-list-item {
    border-bottom: none !important; // Remove default borders
    padding: 4px 0; // Minimal padding, bubble will handle actual spacing
    display: flex;
    flex-direction: column;

    &.user-message {
      align-items: flex-end; // Align the bubble to the right
    }
    &.ai-message {
      align-items: flex-start; // Align the bubble to the left
    }

    .ant-list-item-meta {
      width: fit-content;
      max-width: 80%;
      padding: 10px 15px;
      border-radius: 18px;
      margin-bottom: 10px;
      color: @input-text-color; // Using @input-text-color for consistency, can define @message-text-color if different
      position: relative; // For potential future use with ::before/::after for tails if desired

      .ant-list-item-meta-title {
        margin-bottom: 4px;
        .sender-name { // Class added in new HTML
          margin-bottom: 0;
          font-size: 0.8em;
          font-weight: 600;
          color: darken(@input-text-color, 25%); // Muted sender name
        }
      }
      .ant-list-item-meta-description { // Class .message-content is on this element in new HTML
        font-size: 0.95em;
        line-height: 1.5;

        // Markdown content overflow styling
        overflow-wrap: break-word;
        word-wrap: break-word;
        word-break: break-word; // General safety for non-code text

        pre {
          max-width: 100%;
          overflow-x: auto;
          white-space: pre-wrap;
          word-break: break-all;
          background-color: rgba(0,0,0,0.2); // Darker background for code blocks in bubbles
          padding: 8px;
          border-radius: 6px;
          margin: 8px 0;
          color: inherit; // Inherit text color from bubble, or set specifically if needed
        }
        code:not(pre > code) { // Inline code
          word-break: break-all;
          overflow-wrap: break-word;
          background-color: rgba(0,0,0,0.2);
          padding: 0.1em 0.3em;
          border-radius: 3px;
          color: inherit;
        }
      }
    }
  }

  // Specific bubble backgrounds
  .user-message .ant-list-item-meta {
    background-color: @primary-accent-color; // User messages with primary accent
    color: white; // Text on primary accent should be white
    .sender-name {
        color: darken(white, 25%);
    }
  }
  .ai-message .ant-list-item-meta {
    background-color: @input-bg; // AI messages with same bg as input field for consistency
                                  // Or a dedicated @ai-message-bg like #2D2F32
  }
}

// Placeholder for markdown content styling (to be added in next step)
// .message-content {
//   pre { ... }
//   code:not(pre > code) { ... }
// }
