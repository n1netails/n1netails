@import '../../../../variables.less';

.ai-chat-card {
    margin-top: 8px;
}

.ai-chat-card .chat-card-content {

  display: flex;
  flex-direction: column;
  height: 100%;
  min-height: 400px;
}

.chat-virtual-scroll-container {
  flex: 1 1 auto;
  min-height: 0;
  height: 100%;      // Add this line
  overflow: hidden;
  display: flex;     // Ensure flex context for children
  flex-direction: column;
}

.chat-virtual-scroll-viewport {
  width: 100% !important;
  height: 100% !important;   // Ensure it fills the container
  min-height: 500px;         // Or your preferred min height
  flex: 1 1 auto;
  border-radius: 8px;
  background: transparent;
}

.chat-input-area {
  display: flex;
  align-items: flex-end;
  gap: 0;
  margin-top: 12px;
  width: 100%;
  background: transparent;

  // Target the textarea's nz-form-item (the one that's a direct child and not .action-buttons)
  // The inline style "flex: 1;" on this item handles its growing behavior on desktop.
  > nz-form-item:not(.action-buttons) {
    // Ensure it has flex-grow on desktop (already handled by inline style, but good for clarity if we remove inline styles later)
    // flex-grow: 1; // This is effectively what `flex:1` inline style does
    // On mobile, it needs to be full width
    @media (max-width: @screen-sm-max) {
      width: 100%;
      // Add padding to the bottom of the textarea's form item on mobile
      // to make space for the character count before the buttons appear below.
      // The nz-textarea-count is usually absolutely positioned at the bottom right.
      // This padding should lift the perceived bottom of the container for the count.
      padding-bottom: 20px; // Adjust this value as needed
    }
  }

  // Ensure textarea itself is always 100% of its parent form item
  textarea {
    width: 100% !important; // Use !important to override any conflicting ng-zorro styles if necessary
  }

  @media (max-width: @screen-sm-max) {
    flex-direction: column;
    gap: 12px; // Add gap between textarea and button container when stacked

    // Styling for the form item containing the action buttons
    nz-form-item.action-buttons {
      margin-left: 0; // Remove left margin on small screens
      width: 100%; // Make button container full width

      button[nz-button] {
        flex: 1; // Make buttons share space equally
        // min-width: 0; // Reset min-width if it causes issues with flex:1
      }
    }
  }
}

.chat-textarea { // This class is indeed unused.
  flex: 1 1 0;
  min-width: 0;
  margin-bottom: 0;
}

.action-buttons {
  // Default styles for larger screens are in the HTML (display: flex; gap: 8px; margin-left: 12px)
  // Media query above handles small screen adjustments.
  // To ensure buttons always have some minimum width and don't get too squished on medium screens before wrapping:
  button[nz-button] {
    min-width: 100px; // Example: Adjust as needed
  }
}
